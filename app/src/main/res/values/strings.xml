<resources>
    <string name="app_name">DiCa</string>
    <string name="login">Login</string>
    <string name="logout">Logout</string>
    <string name="username">Username</string>
    <string name="password">Password</string>
    <string name="loading">Loading.....</string>
    <string name="common_error">temporary unable to use (%1$s)</string>
    <string name="all_data_load">nothing else..</string>
    <string name="compose_submit">Submit</string>
    <string name="compose_text">Text</string>
    <string name="status_saving">status saving</string>
    <string name="status_not_found">Status not found</string>
    <string name="permission_public">Public</string>
    <string name="permission_assign">Private</string>
    <string name="perm_deny_gallery">permission deny</string>
    <string name="perm_deny_camera">Permission Denied</string>
    <string name="fail_pick_photo">No image chosen (%1$s)</string>
    <string name="photo_reset">reset</string>
    <string name="photo_rotate">rotate</string>
    <string name="photo_crop">crop</string>
    <string name="perm_deny_gps">permission denied</string>
    <string name="status_like">like</string>
    <string name="status_share">share</string>
    <string name="status_comment">%1$s</string>
    <string name="status_reply_to">Reply To: %1$s</string>
    <string name="no_api_support">No API support yet</string>
    <string name="not_implement_yet">Not yet implemented</string>
    <string name="user_not_found">User not found</string>
    <string name="likes_counter">%1$s people like</string>
    <string name="index_public_timeline">LOCAL</string>
    <string name="index_friends_timeline">FRIENDS</string>
    <string name="app_description">A simple client for Friendica</string>
    <string name="index_my_timeline">HOME</string>
    <string name="notifications">Notifications</string>
    <string name="mark_all_notifications_seen">Mark all seen</string>
    <string name="status_not_exists">Item does not exist</string>
    <string name="index_favorites_timeline">FAVORITES</string>
    <string name="status_favorites">Favorites</string>
    <string name="no_any_status">no data here</string>
    <string name="status_source">" - %1$s"</string>
    <string name="status_retweet">retweet</string>
    <string name="retweeting">retweeting</string>
    <string name="retweet_fail">retweet fail (%1$s)</string>
    <string name="fetch_remote_user">fetching remote user data..</string>
    <string name="post_success">Published successfully</string>
    <string name="post_failure">Failed to publish (%1$s)</string>
    <string name="retweet_success">Sucessfully shared</string>
    <string name="menu_open_link">Open Link</string>
    <string name="menu_delete">Delete Globally</string>
    <string name="confirm_delete_status">Confirm Delete Status ?</string>
    <string name="processing">processing.....</string>
    <string name="new_status_since">you got %1$s new status</string>
    <string name="googleStickerUri"><![CDATA[
        q=sticker&tbm=isch&tbs=itp:clipart
        ]]></string>
    <string name="sticker_image_search_only">not support this type of search</string>
    <string name="index_network_public">GLOBAL</string>
    <string name="new_status_more_than_page_size">more than %1$s new statuses</string>
    <string name="notify_on">15 mins</string>
    <string name="notify_off">notification off</string>
    <string name="new_notification_count">you have %1$s new notification(s)</string>
    <string name="max_photo_number_upload">maximum photo upload limited to %1$s photos</string>
    <string name="status_media_uploading">media #%1$s uploading</string>
    <string name="status_posting">status posting...</string>
    <string name="registration">registration ?</string>
    <string name="expand_comments">- show all (%1$s)</string>
    <string name="title_activity_help">HelpActivity</string>
    <string name="large_text">" Material is the metaphor. A material metaphor is the unifying theory of a rationalized
    space and a system of motion. The material is grounded in tactile reality, inspired by the study of paper and
    ink, yet technologically advanced and open to imagination and magic. Surfaces and edges of the material provide
    visual cues that are grounded in reality. The use of familiar tactile attributes helps users quickly understand
    affordances. Yet the flexibility of the material creates new affordances that supercede those in the physical
    world, without breaking the rules of physics. The fundamentals of light, surface, and movement are key to
    conveying how objects move, interact, and exist in space and in relation to each other. Realistic lighting shows
    seams, divides space, and indicates moving parts. Bold, graphic, intentional. The foundational elements of print
    based design typography, grids, space, scale, color, and use of imagery guide visual treatments. These elements
    do far more than please the eye. They create hierarchy, meaning, and focus. Deliberate color choices, edge to
    edge imagery, large scale typography, and intentional white space create a bold and graphic interface that
    immerse the user in the experience. An emphasis on user actions makes core functionality immediately apparent
    and provides waypoints for the user. Motion provides meaning. Motion respects and reinforces the user as the
    prime mover. Primary user actions are inflection points that initiate motion, transforming the whole design. All
    action takes place in a single environment. Objects are presented to the user without breaking the continuity of
    experience even as they transform and reorganize. Motion is meaningful and appropriate, serving to focus
    attention and maintain continuity. Feedback is subtle yet clear. Transitions are efﬁcient yet coherent. 3D
    world. The material environment is a 3D space, which means all objects have x, y, and z dimensions. The z-axis
    is perpendicularly aligned to the plane of the display, with the positive z-axis extending towards the viewer.
    Every sheet of material occupies a single position along the z-axis and has a standard 1dp thickness. On the
    web, the z-axis is used for layering and not for perspective. The 3D world is emulated by manipulating the
    y-axis. Light and shadow. Within the material environment, virtual lights illuminate the scene. Key lights
    create directional shadows, while ambient light creates soft shadows from all angles. Shadows in the material
    environment are cast by these two light sources. In Android development, shadows occur when light sources are
    blocked by sheets of material at various positions along the z-axis. On the web, shadows are depicted by
    manipulating the y-axis only. The following example shows the card with a height of 6dp. Resting elevation. All
    material objects, regardless of size, have a resting elevation, or default elevation that does not change. If an
    object changes elevation, it should return to its resting elevation as soon as possible. Component elevations.
    The resting elevation for a component type is consistent across apps (e.g., FAB elevation does not vary from 6dp
    in one app to 16dp in another app). Components may have different resting elevations across platforms, depending
    on the depth of the environment (e.g., TV has a greater depth than mobile or desktop). Responsive elevation and
    dynamic elevation offsets. Some component types have responsive elevation, meaning they change elevation in
    response to user input (e.g., normal, focused, and pressed) or system events. These elevation changes are
    consistently implemented using dynamic elevation offsets. Dynamic elevation offsets are the goal elevation that
    a component moves towards, relative to the component’s resting state. They ensure that elevation changes are
    consistent across actions and component types. For example, all components that lift on press have the same
    elevation change relative to their resting elevation. Once the input event is completed or cancelled, the
    component will return to its resting elevation. Avoiding elevation interference. Components with responsive
    elevations may encounter other components as they move between their resting elevations and dynamic elevation
    offsets. Because material cannot pass through other material, components avoid interfering with one another any
    number of ways, whether on a per component basis or using the entire app layout. On a component level,
    components can move or be removed before they cause interference. For example, a floating action button (FAB)
    can disappear or move off screen before a user picks up a card, or it can move if a snackbar appears. On the
    layout level, design your app layout to minimize opportunities for interference. For example, position the FAB
    to one side of stream of a cards so the FAB won’t interfere when a user tries to pick up one of cards. "
    </string>
    <string name="action_settings">Settings</string>
    <string name="menu_help">Help</string>
    <string name="menu_help_text">
    </string>
    <string name="title_activity_main_alt">activity_main_alt</string>
    <string name="tab_text_1">Tab 1</string>
    <string name="tab_text_2">Tab 2</string>
    <string name="tab_text_3">Tab 3</string>
    <string name="section_format">Hello World from section: %1$d</string>
</resources>
